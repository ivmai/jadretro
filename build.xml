<?xml version="1.0"?>

<!--
 - @(#) build.xml - ant build script for JadRetro.
 -->

<project name="JadRetro" basedir="." default="all">

  <property name="project.unix.name" value="jadretro"/>
  <property name="main-class" value="net.sf.${project.unix.name}.Main"/>
  <property name="src.dir" value="src"/>

  <property name="target.java.version" value="1.3"/>
  <property name="source.java.version" value="${target.java.version}"/>

  <property name="dist.dir" value=".dist-jvm"/>
  <property name="classes.dir" value="${dist.dir}/.classes"/>

  <property name="dist.project.dir" value="${dist.dir}/${project.unix.name}"/>
  <property name="main.jar.file"
            value="${dist.project.dir}/${project.unix.name}.jar"/>

  <property name="readme.file.name" value="${project.unix.name}.txt"/>
  <property name="license.file.name" value="GNU_GPL.txt"/>

  <target name="clean">
    <delete dir="${dist.dir}"/>
  </target>

  <target name="compile">
    <mkdir dir="${classes.dir}"/>
    <javac srcdir="${src.dir}" destdir="${classes.dir}"
           source="${source.java.version}" target="${target.java.version}"/>
  </target>

  <target name="jar" depends="compile">
    <mkdir dir="${dist.project.dir}"/>
    <jar destfile="${main.jar.file}" basedir="${classes.dir}"
         compress="false">
      <manifest>
        <attribute name="Main-Class" value="${main-class}"/>
      </manifest>
    </jar>
  </target>

  <target name="dist" depends="jar">
    <copy file="${readme.file.name}" todir="${dist.project.dir}"
          preservelastmodified="true"/>
    <copy file="${license.file.name}" todir="${dist.project.dir}"
          preservelastmodified="true"/>
  </target>

  <target name="run" depends="jar">
    <java jar="${main.jar.file}" fork="true"/>
  </target>

  <target name="all" depends="clean,dist,run"/>

</project>
